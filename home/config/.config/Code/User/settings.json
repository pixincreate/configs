{
    // update settings
    "update.mode": "manual",

    // Editor & Workbench Settings
    "workbench.colorTheme": "Kanagawa Dragon",
    "workbench.iconTheme": "material-icon-theme",
    "workbench.settings.editor": "json",

    // Windows specific settings
    "window.commandCenter": true,

    // Editor settings
    "editor.acceptSuggestionOnEnter": "off",
    "editor.accessibilitySupport": "off",
    "editor.trimAutoWhitespace": true,
    "editor.bracketPairColorization.enabled": true,
    "editor.formatOnSave": true,
    "editor.fontFamily": "Geist Mono, FiraCode Nerd Font, Menlo, Courier New, monospace",
    "editor.fontLigatures": true,
    "editor.formatOnPaste": false,
    "editor.formatOnType": false,
    "editor.guides.bracketPairs": true,
    "editor.guides.bracketPairsHorizontal": "active",
    "editor.indentSize": "tabSize",
    "editor.inlayHints.enabled": "onUnlessPressed",
    "editor.inlineSuggest.enabled": true,
    "editor.letterSpacing": 0.2,
    "editor.lineNumbers": "relative",
    "editor.minimap.autohide": true,
    "editor.minimap.enabled": true,
    "editor.renderWhitespace": "all",
    "editor.renderFinalNewline": "on",
    "editor.suggestSelection": "first",
    "editor.suggest.matchOnWordStartOnly": false,
    "editor.tabSize": 2,

    // File Settings
    "files.autoSave": "afterDelay",
    "files.insertFinalNewline": true,
    "files.trimFinalNewlines": true,
    "files.trimTrailingWhitespace": true,

    // Explorer settings
    "explorer.confirmDragAndDrop": false,
    "explorer.confirmDelete": true,

    // Terminal Settings
    "terminal.explorerKind": "external",
    "terminal.integrated.cursorBlinking": true,
    "terminal.integrated.cursorStyle": "line",
    "terminal.integrated.enableImages": true,
    "terminal.integrated.fontFamily": "JetBrains Mono, Geist Mono, FiraCode Nerd Font, Menlo, Courier New, monospace",
    "terminal.integrated.letterSpacing": 0.1,
    "terminal.integrated.lineHeight": 1.2,
    "terminal.integrated.scrollback": 1000000,
    "terminal.integrated.suggest.enabled": true,
    "terminal.integrated.useWslProfiles": true,

    // Default Terminal Profiles
    "terminal.integrated.defaultProfile.linux": "zsh",
    "terminal.integrated.defaultProfile.osx": "zsh",
    "terminal.integrated.defaultProfile.windows": "PowerShell",
    "terminal.integrated.profiles.linux": {
        "bash": {
            "path": "bash",
            "icon": "terminal-bash"
        },
        "zsh": {
            "path": "zsh"
        },
        "fish": {
            "path": "fish"
        },
        "tmux-shell": {
            "path": "tmux",
            "icon": "terminal-tmux",
            "args": [
                "new-session",
                "-A",
                "-s",
                "vscode:${workspaceFolder}"
            ]
        },
        "pwsh": {
            "path": "pwsh",
            "icon": "terminal-powershell"
        }
    },
    "terminal.integrated.profiles.osx": {
        "bash": {
            "path": "bash",
            "args": [
                "-l"
            ],
            "icon": "terminal-bash"
        },
        "zsh": {
            "path": "zsh",
            "args": [
                "-l"
            ]
        },
        "fish": {
            "path": "fish",
            "args": [
                "-l"
            ]
        },
        "tmux-shell": {
            "path": "tmux",
            "icon": "terminal-tmux",
            "args": [
                "new-session",
                "-A",
                "-s",
                "vscode:${workspaceFolder}"
            ]
        },
        "pwsh": {
            "path": "pwsh",
            "icon": "terminal-powershell"
        }
    },
    "terminal.integrated.profiles.windows": {
        "PowerShell": {
            "source": "PowerShell",
            "icon": "terminal-powershell"
        },
        "Command Prompt": {
            "path": [
                "${env:windir}\\Sysnative\\cmd.exe",
                "${env:windir}\\System32\\cmd.exe"
            ],
            "args": [],
            "icon": "terminal-cmd"
        },
        "Git Bash": {
            "source": "Git Bash"
        },
        "Debian (WSL)": {
            "path": "C:\\WINDOWS\\System32\\wsl.exe",
            "args": [
                "-d",
                "Debian"
            ]
        }
    },

    // Default External Terminal
    "terminal.external.linuxExec": "ghostty",
    "terminal.external.osxExec": "Ghostty.app",
    "terminal.external.windowsExec": "C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\PowerShell\\PowerShell 7 (x64).lnk",

    // Privacy (Telemetry) Settings
    "docker.lsp.telemetry": "off",
    "gitlens.telemetry.enabled": false,
    "telemetry.feedback.enabled": false,
    "telemetry.telemetryLevel": "off",

    // Debugger
    "debug.allowBreakpointsEverywhere": false,

    // Search
    "search.showLineNumbers": true,

    // Zen Mode
    "zenMode.centerLayout": true,
    "zenMode.fullScreen": true,
    "zenMode.hideActivityBar": true,
    "zenMode.hideLineNumbers": false,
    "zenMode.showTabs": "single",


    // Extension Settings
    "extensions.autoUpdate": true,
    "extensions.ignoreRecommendations": true,

    // Better Comments
    "better-comments.highlightPlainText": true,
    "better-comments.tags": [
        {
            "tag": "!",
            "color": "#FF2D00",
            "strikethrough": false,
            "backgroundColor": "transparent"
        },
        {
            "tag": "?",
            "color": "#3498DB",
            "strikethrough": false,
            "backgroundColor": "transparent"
        },
        {
            "tag": "//",
            "color": "#474747",
            "strikethrough": false,
            "backgroundColor": "transparent"
        },
        {
            "tag": "todo",
            "color": "#FF8C00",
            "strikethrough": false,
            "backgroundColor": "transparent"
        },
        {
            "tag": "*",
            "color": "#98C379",
            "strikethrough": false,
            "backgroundColor": "transparent"
        }
    ],
    // Diff Editor
    "diffEditor.experimental.showMoves": true,
    "diffEditor.ignoreTrimWhitespace": false,
    // ESLint
    "eslint.format.enable": true,
    "eslint.useFlatConfig": true,
    "eslint.validate": [
        "javascript",
        "javascriptreact",
        "typescript",
        "typescriptreact"
    ],
    // Even Better TOML
    "evenBetterToml.formatter.alignComments": true,
    "evenBetterToml.formatter.alignEntries": false,
    "evenBetterToml.formatter.columnWidth": 80,
    "evenBetterToml.formatter.compactArrays": true,
    "evenBetterToml.formatter.compactInlineTables": false,
    "evenBetterToml.formatter.indentTables": false,
    "evenBetterToml.formatter.reorderKeys": false,
    "evenBetterToml.semanticTokens": true,
    // Git
    "git.alwaysSignOff": true,
    "git.autofetch": "all",
    "git.autoStash": true,
    "git.branchSortOrder": "committerdate",
    "git.branchWhitespaceChar": "-",
    "git.closeDiffOnOperation": true,
    "git.confirmEmptyCommits": true,
    "git.decorations.enabled": true,
    "git.detectSubmodules": true,
    "git.enableCommitSigning": true,
    "git.fetchOnPull": true,
    "git.mergeEditor": true,
    "git.promptToSaveFilesBeforeCommit": "always",
    "git.promptToSaveFilesBeforeStash": "always",
    "git.pruneOnFetch": true,
    "git.pullBeforeCheckout": true,
    "git.useEditorAsCommitInput": true,
    // GitHub
    "github.branchProtection": true,
    // GitHub CoPilot
    "github.copilot.enable": {
        "markdown": true,
        "rust": false
    },
    "github.copilot.chat.scopeSelection": true,
    "github.copilot.advanced": {
        "useLanguageServer": true,
    },
    // GitLens
    "gitlens.defaultDateStyle": "absolute",
    "gitlens.defaultGravatarsStyle": "identicon",
    // Live Server
    "liveServer.settings.donotShowInfoMsg": true,
    "liveServer.settings.fullReload": true,
    "liveServer.settings.useLocalIp": true,
    // NeoVim
    "extensions.experimental.affinity": {
        "asvetliakov.vscode-neovim": 1
    },
    // "vscode-neovim.useWSL": true,
    "vscode-neovim.wslDistribution": "Debian",
    "vscode-neovim.neovimWidth": 300,
    "vscode-neovim.neovimExecutablePaths.darwin": "/opt/homebrew/bin/nvim",
    "vscode-neovim.neovimInitVimPaths.darwin" : "$HOME/.config/nvim/init.lua",
    "vscode-neovim.neovimExecutablePaths.linux" : "/usr/bin/nvim",
    "vscode-neovim.neovimInitVimPaths.linux" : "$HOME/.config/nvim/init.lua",
    // "vscode-neovim.neovimExecutablePaths.win32" : "C:\\Program Files\\Neovim\\bin\\nvim.exe",
    // "vscode-neovim.neovimInitVimPaths.win32" : "$HOME\\AppData\\Local\\nvim\\init.lua",

    // Powershell
    "powershell.codeFormatting.preset": "OTBS",
    "powershell.codeFormatting.autoCorrectAliases": true,
    "powershell.codeFormatting.avoidSemicolonsAsLineTerminators": false,
    "powershell.codeFormatting.whitespaceBetweenParameters": true,
    // Prettier
    "prettier.bracketSameLine": true,
    "prettier.experimentalTernaries": true,
    "prettier.requireConfig": true,
    "prettier.useTabs": true,
    // Rust Analyzer
    "rust-analyzer.check.allTargets": true,
    "rust-analyzer.check.features": "all",
    "rust-analyzer.cargo.features": "all",
    "rust-analyzer.check.command": "clippy",
    "rust-analyzer.completion.autoimport.enable": true,
    "rust-analyzer.completion.addSemicolonToUnit": true,
    "rust-analyzer.completion.privateEditable.enable": true,
    "rust-analyzer.imports.granularity.enforce": true,
    "rust-analyzer.imports.granularity.group": "crate",
    "rust-analyzer.imports.prefix": "crate",
    "rust-analyzer.trace.server": "verbose",
    // SCM
    "scm.defaultViewMode": "tree",
    "scm.diffDecorations": "all",
    "scm.diffDecorationsIgnoreTrimWhitespace": "false",


    // LSP Settings
    "[asciidoc]": {
        "editor.renderFinalNewline": "on",
        "editor.trimAutoWhitespace": true,
        "editor.wordWrap": "bounded",
        "editor.wordWrapColumn": 100,
        "files.trimFinalNewlines": true,
        "files.trimTrailingWhitespace": true,
        "files.insertFinalNewline": true
    },
    "[c]": {
        "editor.defaultFormatter": "ms-vscode.cpptools",
        "editor.semanticHighlighting.enabled": true,
        "editor.stickyScroll.defaultModel": "foldingProviderModel",
        "editor.suggest.insertMode": "replace",
        "editor.wordBasedSuggestions": "off",
    },
    "[cpp]": {
        "editor.defaultFormatter": "ms-vscode.cpptools",
        "editor.semanticHighlighting.enabled": true,
        "editor.stickyScroll.defaultModel": "foldingProviderModel",
        "editor.suggest.insertMode": "replace",
        "editor.wordBasedSuggestions": "off",
    },
    "[css]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "editor.suggest.insertMode": "replace",
        "cSpell.fixSpellingWithRenameProvider": false,
        "gitlens.codeLens.scopes": [
            "document",
            "containers"
        ]
    },
    "[dockerfile]": {
        "editor.defaultFormatter": "ms-azuretools.vscode-docker",
        "editor.quickSuggestions": {
            "strings": true
        },
    },
    "[dockercompose]": {
        "editor.autoIndent": "advanced",
        "editor.defaultFormatter": "ms-azuretools.vscode-docker",
        "editor.insertSpaces": true,
        "editor.tabSize": 2,
        "editor.quickSuggestions": {
            "other": true,
            "comments": false,
            "strings": true
        }
    },
    "[html]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "editor.suggest.insertMode": "replace",
        "cSpell.fixSpellingWithRenameProvider": false,
        "gitlens.codeLens.scopes": [
            "document",
            "containers"
        ]
    },
    "[javascript]": {
        "editor.maxTokenizationLineLength": 2500,
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "editor.codeActionsOnSave": {
            "source.fixAll.eslint": "explicit"
        },
    },
    "[javascriptreact]": {
        "editor.maxTokenizationLineLength": 2500,
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "editor.codeActionsOnSave": {
            "source.fixAll.eslint": "explicit"
        },
    },
    "[json]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[jsonc]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[markdown]": {
        "editor.defaultFormatter": "yzhang.markdown-all-in-one",
        "editor.renderFinalNewline": "on",
        "editor.rulers": [
            80
        ],
        "editor.trimAutoWhitespace": true,
        "editor.wordWrap": "wordWrapColumn",
    },
    "[powershell]": {
        "editor.defaultFormatter": "ms-vscode.powershell",
        "editor.rulers": [
            120
        ],
    },
    "[rust]": {
        "editor.defaultFormatter": "rust-lang.rust-analyzer",
        "editor.formatOnSave": true,
        "editor.rulers": [
            99
        ],
    },
    "[shell]": {
        "editor.defaultFormatter": "foxundermoon.shell-format",
    },
    "[shellscript]": {
        "editor.tabSize": 2,
        "files.eol": "\n"
    },
    "[sql]": {
        "editor.defaultFormatter": "ms-mssql.mssql",
    },
    "[terraform]": {
        "editor.tabSize": 2
    },
    "[toml]": {
        "editor.defaultFormatter": "tamasfe.even-better-toml",
    },
    "[typescript]": {
        "editor.maxTokenizationLineLength": 2500,
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "editor.codeActionsOnSave": {
            "source.fixAll.eslint": "explicit"
        },
    },
    "[typescriptreact]": {
        "editor.maxTokenizationLineLength": 2500,
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "editor.codeActionsOnSave": {
            "source.fixAll.eslint": "explicit"
        },
    },
    "[yaml]": {
        "editor.autoIndent": "keep",
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "editor.insertSpaces": true,
        "editor.quickSuggestions": {
            "other": true,
            "comments": false,
            "strings": true
        },
        "editor.tabSize": 2,
        "gitlens.codeLens.scopes": [
            "document"
        ]
    },
}
